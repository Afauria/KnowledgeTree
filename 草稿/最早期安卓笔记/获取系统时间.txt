import java.text.SimpleDateFormat;
SimpleDateFormat formatter = new SimpleDateFormat ("yyyy年MM月dd日 HH:mm:ss ");
Date curDate = new Date(System.currentTimeMillis());//获取当前时间
String str = formatter.format(curDate);


java代码：
SimpleDateFormat sDateFormat = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");
String date = sDateFormat.format(new java.util.Date());


当然还有就是可以指定时区的时间(待):
df=DateFormat.getDateTimeInstance(DateFormat.FULL,DateFormat.FULL,Locale.CHINA);
System.out.println(df.format(new Date()));



取得系统日期:
java代码：
Calendar c = Calendar.getInstance();
year = c.get(Calendar.YEAR)
month = c.grt(Calendar.MONTH)
day = c.get(Calendar.DAY_OF_MONTH)
hour = c.get(Calendar.HOUR_OF_DAY); //24小时制
minute = c.get(Calendar.MINUTE)



取得系统时间  
1。  
long time=System.currentTimeMillis();  
   
2。  
final Calendar mCalendar=Calendar.getInstance();  
mCalendar.setTimeInMillis(time);  
取得小时：mHour=mCalendar.get(Calendar.HOUR);  
取得分钟：mMinuts=mCalendar.get(Calendar.MINUTE);  
   
   
利用Time获取:

java代码：
Time t=new Time(); // or Time t=new Time("GMT+8"); 加上Time Zone资料。
　　t.setToNow(); // 取得系统时间。
　　int year = t.year;
　　int month = t.month;
　　int date = t.monthDay;
　　int hour = t.hour; // 0-23
　　int minute = t.minute;
　　int second = t.second;
   
4。  
DateFormat df = new SimpleDateFormat("HH:mm:ss");  
df.format(new Date()); 